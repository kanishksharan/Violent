import queue
from threading import Thread
import time

# create a thread class for the threads to receive tasks from queue
class WorkerThread(Thread): # A sub class of Thread
    def __init__(self, queue): # The queue is same as the task queue
        Thread.__init__(self)
        self.queue = queue

    def run (self):
        print ("inside worker Thread\n")
        while True:
            counter = self.queue.get()
            print ("Ordered to sleep for %d seconds!\n"%counter)
            time.sleep(counter)
            print ("Finished sleeping for %d seconds\n"%counter)
            self.queue.task_done()

# To create task queue, we call the queue method
queue = queue.Queue()

# Creating worker threads
for i in range(10):
    print ("Creating WorkerThread: %d\n"%i)
    worker = WorkerThread(queue)
    worker.setDaemon(True) # This is a background process in linux
    worker.start()
    print("The WorkerThread  %d created\n"%i)

# Inserting or loading values into the queue
for j in range (10):
    queue.put(j)

queue.join() # This shows that the task que is empty and has no more tasks left in it.
print ("All tasks over")
